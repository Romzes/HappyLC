https://habr.com/ru/articles/550088/
Задача  1) LeetCode  350 (Easy)   Intersection of Two Arrays II https://leetcode.com/problems/intersection-of-two-arrays-ii/description
Задача  2) LeetCode  443 (Medium) String Compression https://leetcode.com/problems/string-compression/description
Задача  3) LeetCode  228 (Easy)   Summary Ranges https://leetcode.com/problems/summary-ranges/description
Задача  4) LeetCode 1493 (Medium) Longest Subarray of 1's After Deleting One Element https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description
Задача  5) LeetCode  253 (Medium) Meeting Rooms II https://leetcode.com/problems/meeting-rooms-ii/description
Задача  6) LeetCode   49 (Medium) Group Anagrams https://leetcode.com/problems/group-anagrams/description
Задача  7) LeetCode   56 (Medium) Merge Intervals https://leetcode.com/problems/merge-intervals/description
Задача  8) LeetCode Дан массив точек с целочисленными координатами (x, y). Определить, существует ли вертикальная прямая, делящая точки на 2 симметричных относительно этой прямой множества.
Задача  9) LeetCode  161 (Medium) One Edit Distance https://leetcode.com/problems/one-edit-distance/description отличие: есть insert
Задача 10) LeetCode  325 (Medium) Maximum Size Subarray Sum Equals k https://leetcode.com/problems/maximum-size-subarray-sum-equals-k



https://leetcode.com/company/yandex/discuss?currentPage=1&orderBy=newest_to_oldest&query=

https://leetcode.com/company/yandex/discuss/3305189/Yandex-or-OA-or-Count-common-elements-for-prefixes

https://habr.com/ru/articles/550088/
http://judge.mipt.ru/mipt_cs_on_python3/


Темы для подготовки к алгоритмам:
prefix sum:
    https://leetcode.com/tag/prefix-sum/ 

linked lists:
    https://leetcode.com/problems/merge-k-sorted-lists/ 
    https://leetcode.com/problems/linked-list-cycle/ 
    https://leetcode.com/problems/add-two-numbers/ 
    https://leetcode.com/problems/reverse-linked-list/ 
 
binary search:
    https://leetcode.com/problems/binary-search/ 
    https://leetcode.com/problems/guess-number-higher-or-lower/ 
    https://leetcode.com/problems/search-a-2d-matrix/ 
    https://leetcode.com/problems/search-in-rotated-sorted-array/ 
    https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/ 
    https://leetcode.com/problems/search-in-rotated-sorted-array-ii/ 
 
hash table:
    https://leetcode.com/problems/single-number/  - решить за O(1) по памяти
    https://leetcode.com/problems/two-sum/ 
    https://leetcode.com/problems/4sum/ 
    https://leetcode.com/problems/group-anagrams/ 
    https://leetcode.com/problems/valid-anagram/ 
    https://leetcode.com/problems/find-all-anagrams-in-a-string/ 

queue/stack:
    https://leetcode.com/problems/valid-parentheses/ 

dfs/bfs:
    https://leetcode.com/problems/number-of-islands/ 
    https://leetcode.com/problems/remove-invalid-parentheses/ 
 
sort:
    https://leetcode.com/problems/merge-intervals/ 
 
heap/hash:
    https://leetcode.com/problems/top-k-frequent-words/ 
    https://leetcode.com/problems/top-k-frequent-elements/ 
 
two pointers:
    https://leetcode.com/problems/container-with-most-water/ 
    https://leetcode.com/problems/partition-labels/ 
 
sliding window:
    https://leetcode.com/problems/sliding-window-median/ 
    https://leetcode.com/problems/sliding-window-maximum/ 
    https://leetcode.com/problems/longest-repeating-character-replacement/ 
 
tree:
    https://leetcode.com/problems/same-tree/ 
    https://leetcode.com/problems/symmetric-tree/ 
    https://leetcode.com/problems/balanced-binary-tree/ 
    https://leetcode.com/problems/path-sum-ii/ 
 
greedy problems:
    https://leetcode.com/problems/best-time-to-buy-and-sell-stock/ 
    https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/ 
    https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/ 
    https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/


849. Maximize Distance to Closest Person


Нужно реализовать функцию OneEditApart , проверяющую, можно ли одну строку получить
из другой не более, чем за одно исправление (удаление, добавление, изменение символа):

public static boolean oneEditApart(String first, String second) {
    if (first.length < second.length) return oneEditApart(second, first);
    if (first.length - second.length > 1) return false;
    if (first.length == second.length) {
        int changes = 0;
        for (int i = 0; i < first.length; i++) {
            if (first.charAt(i) != second.charAt(i)) changes++;
        }
        return changes <= 1;
    }
    int fp = 0;
    int sp = 0;
    while (fp < first.length && sp < second.length) {
        if (first.charAt(fp) == second.charAt(sp)) {
            sp++;
        }
        fp++;
    }
    return sp == second.length;
}


Для двух массивов целых чисел длины N, для всех K от 1 до N, посчитать количество общих чисел на префиксах длины K.
public static int[] foo(int[] arr1, int arr2) {
    var res = new int[arr1.length];
    var s1 = new HashSet<Integer>();
    var s2 = new HashSet<Integer>();
    int counter = 0;
    for (int i = 0; i < arr1.length; i++) {
        if (arr1[i] == arr2[i]) {
            if (!s1.contains(arr1[i]) || !s2.contains(arr2[i])) counter++;
        } else {
            if (!s1.contains(arr1[i]) && s2.contains(arr1[i])) counter++;
            if (!s2.contains(arr2[i]) && s1.contains(arr2[i])) counter++;
        }
        res[i] = counter;
        s1.add(arr1[i]);
        s2.add(arr2[i]);
    }
    return res;
}


